apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: sock-shop
  annotations:
   #kubernetes.io/ingress.class: nginx
   cert-manager.io/cluster-issuer: letsencrypt-prod

spec:
  ingressClassName: nginx
  rules:
  - host: sock-shop.neyothetechguy.com.ng
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: front-end
              port:
                number: 80
      
  tls:
      - hosts:
          - sock-shop.neyothetechguy.com.ng
        secretName: tls-secret







# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: sock-ingress
#   namespace: sock-shop
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: frontend.neyothetechguy.com.ng
#       http:
#         paths:
#           - pathType: Prefix
#             path: /
#             backend:
#               service:
#                 name: front-end
#                 port:
#                   number: 80



# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-ingress
#   namespace: sock-shop
#   annotations:
#    kubernetes.io/ingress.class: nginx
#    cert-manager.io/cluster-issuer: letsencrypt-prod

# spec:
#   rules:
#   - host: frontend.neyothetechguy.com.ng
#     http:
#       paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: front-end
#               port:
#                 number: 80
      
#   tls:
#       - hosts:
#           - frontend.neyothetechguy.com.ng
#         secretName: tls-secret



# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: example-ingress
#   namespace: default
# spec:
#   rules:
#     - host: example.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: example-service
#                 port:
#                   number: 80



